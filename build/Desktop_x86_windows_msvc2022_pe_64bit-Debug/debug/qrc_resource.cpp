/****************************************************************************
** Resource object code
**
** Created by: The Resource Compiler for Qt version 6.8.0
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#ifdef _MSC_VER
// disable informational message "function ... selected for automatic inline expansion"
#pragma warning (disable: 4711)
#endif

static const unsigned char qt_resource_data[] = {
  // icon.png
  0x0,0x0,0x0,0xf1,
  0x89,
  0x50,0x4e,0x47,0xd,0xa,0x1a,0xa,0x0,0x0,0x0,0xd,0x49,0x48,0x44,0x52,0x0,
  0x0,0x0,0x32,0x0,0x0,0x0,0x32,0x8,0x6,0x0,0x0,0x0,0x1e,0x3f,0x88,0xb1,
  0x0,0x0,0x0,0x9,0x70,0x48,0x59,0x73,0x0,0x0,0xb,0x13,0x0,0x0,0xb,0x13,
  0x1,0x0,0x9a,0x9c,0x18,0x0,0x0,0x0,0xa3,0x49,0x44,0x41,0x54,0x78,0x9c,0xed,
  0xd9,0x41,0xa,0x83,0x40,0x10,0x44,0xd1,0x5a,0x79,0x28,0xd1,0xf3,0xa9,0x7,0x35,
  0x39,0x46,0x5,0x61,0x4,0xc9,0xa6,0xcd,0x22,0xa4,0x26,0xfc,0x7,0xd,0x2e,0xbb,
  0xf9,0x3b,0x47,0x2,0x0,0x84,0x18,0x24,0x6d,0x92,0x1e,0x92,0x1c,0x36,0xbb,0xa4,
  0xb5,0xed,0x58,0x5a,0x3,0x16,0x76,0x31,0xc7,0x8e,0xa5,0xc4,0x12,0x7e,0x9b,0xe7,
  0x9d,0x43,0x7e,0xb9,0xe0,0x28,0x69,0x2a,0xbe,0xcf,0x89,0x3e,0x64,0x92,0x34,0x17,
  0xdf,0x5d,0x1c,0xe2,0xf,0x86,0x43,0xdc,0x6b,0x91,0x54,0xe6,0x90,0x30,0xa6,0x48,
  0x18,0x53,0x24,0x8c,0x29,0x12,0xc6,0x14,0x9,0x63,0x8a,0x84,0x31,0x45,0xc2,0x98,
  0x22,0x61,0x4c,0x91,0x30,0xa6,0x48,0x18,0x53,0x24,0x8c,0x29,0xd2,0x6b,0x91,0xfd,
  0xf2,0xe3,0x38,0xcd,0xdc,0x76,0x3b,0x76,0xfc,0x8b,0x87,0x9e,0xe5,0xce,0x21,0x43,
  0x3b,0xe6,0x2c,0xd3,0xed,0xd3,0x1b,0x0,0x40,0xdf,0xf6,0x2,0x1,0xaf,0xf8,0xee,
  0xc3,0x71,0x2f,0x79,0x0,0x0,0x0,0x0,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,
  
  
};

static const unsigned char qt_resource_name[] = {
  // icons
  0x0,0x5,
  0x0,0x6f,0xa6,0x53,
  0x0,0x69,
  0x0,0x63,0x0,0x6f,0x0,0x6e,0x0,0x73,
    // icon.png
  0x0,0x8,
  0xa,0x61,0x5a,0xa7,
  0x0,0x69,
  0x0,0x63,0x0,0x6f,0x0,0x6e,0x0,0x2e,0x0,0x70,0x0,0x6e,0x0,0x67,
  
};

static const unsigned char qt_resource_struct[] = {
  // :
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/icons
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x2,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/icons/icons
  0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x3,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
  // :/icons/icons/icon.png
  0x0,0x0,0x0,0x10,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x1,0x92,0xa5,0x55,0xb8,0x46,

};

#ifdef QT_NAMESPACE
#  define QT_RCC_PREPEND_NAMESPACE(name) ::QT_NAMESPACE::name
#  define QT_RCC_MANGLE_NAMESPACE0(x) x
#  define QT_RCC_MANGLE_NAMESPACE1(a, b) a##_##b
#  define QT_RCC_MANGLE_NAMESPACE2(a, b) QT_RCC_MANGLE_NAMESPACE1(a,b)
#  define QT_RCC_MANGLE_NAMESPACE(name) QT_RCC_MANGLE_NAMESPACE2( \
        QT_RCC_MANGLE_NAMESPACE0(name), QT_RCC_MANGLE_NAMESPACE0(QT_NAMESPACE))
#else
#   define QT_RCC_PREPEND_NAMESPACE(name) name
#   define QT_RCC_MANGLE_NAMESPACE(name) name
#endif

#if defined(QT_INLINE_NAMESPACE)
inline namespace QT_NAMESPACE {
#elif defined(QT_NAMESPACE)
namespace QT_NAMESPACE {
#endif

bool qRegisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);
bool qUnregisterResourceData(int, const unsigned char *, const unsigned char *, const unsigned char *);

#ifdef QT_NAMESPACE
}
#endif

int QT_RCC_MANGLE_NAMESPACE(qInitResources_resource)();
int QT_RCC_MANGLE_NAMESPACE(qInitResources_resource)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qRegisterResourceData)
        (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_resource)();
int QT_RCC_MANGLE_NAMESPACE(qCleanupResources_resource)()
{
    int version = 3;
    QT_RCC_PREPEND_NAMESPACE(qUnregisterResourceData)
       (version, qt_resource_struct, qt_resource_name, qt_resource_data);
    return 1;
}

#ifdef __clang__
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wexit-time-destructors"
#endif

namespace {
   struct initializer {
       initializer() { QT_RCC_MANGLE_NAMESPACE(qInitResources_resource)(); }
       ~initializer() { QT_RCC_MANGLE_NAMESPACE(qCleanupResources_resource)(); }
   } dummy;
}

#ifdef __clang__
#   pragma clang diagnostic pop
#endif
